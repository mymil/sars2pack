% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_projections.R
\name{plot_projection}
\alias{plot_projection}
\title{plot the disease course and death projections}
\source{
\url{https://covid19.healthdata.org/projections}
}
\usage{
plot_projection(
  location_name,
  projections = healthdata_projections_data(),
  metrics = unique(projections$metric)
)
}
\arguments{
\item{location_name}{character(1), chosen from \code{unique(projections$location_name)}
that is used to filter the projections data.frame to one location.}

\item{projections}{supply a data.frame, typically from a call to
\code{healthdata_projections_data()}. This data.frame must have columns
that include \code{date}, \code{location_name}, \code{metric}, \code{mean}, \code{upper}, and \code{lower}.}

\item{metrics}{character vector of metrics to include on plot.
Get a list of these from the \code{metric} column.}
}
\description{
Using data from \url{https://covid19.healthdata.org/projections}, either
render a plot or return a ggplot object for further manipulation.
}
\details{
This function is a convenience function to return a ggplot2 object that
displays projections for a given location. Projections are typically
coming from a call to \code{healthdata_projections_data()}. If assigned to a
variable, the results can be further manipulated or passed into any
function that accepts a ggplot2 object (like plotly, cowplot, etc.). See
examples for details.
}
\examples{
library(sars2pack)

hdp = healthdata_projections_data()

library(ggplot2)
# possible locations
sort(unique(hdp$location_name))

# create a ggplot2 object
nyp = plot_projection(projections = hdp,
    location_name='New York')

# and do the plot
print(nyp)

# Zoomable html version using plotly
if(require(plotly)) {
  ggplotly(nyp)
}

# California
calip = plot_projection(projections = hdp,
    location_name='California')
print(calip)

# entire US
plot_projection(location_name = "United States of America", projections = hdp)


# Compare two countries
spain_proj = plot_projection(location_name = "Spain", projections = hdp)
portugal_proj = plot_projection(location_name = "Portugal", projections = hdp)
#'
print(spain_proj)
print(portugal_proj)

# plot both on same plot
if(require(cowplot)) {
  plot_grid(spain_proj, portugal_proj)
}

}
\seealso{
healthdata_projections_data()

Other plotting: 
\code{\link{align_to_baseline}()},
\code{\link{plot_epicurve}()}
}
\author{
Sean Davis \href{mailto:seandavi@gmail.com}{seandavi@gmail.com}
}
\concept{plotting}
